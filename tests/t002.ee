EVENT ASSERT NP_ASSERT(x == 43) at t002.c:8
FAIL t002.assert_fail
PASS t002.assert_pass
EVENT ASSERT NP_ASSERT_TRUE(x=0) at t002.c:19
FAIL t002.assert_true_fail
PASS t002.assert_true_pass
EVENT ASSERT NP_ASSERT_FALSE(x=1) at t002.c:29
FAIL t002.assert_false_fail
PASS t002.assert_false_pass
EVENT ASSERT NP_ASSERT_EQUAL(r=-32, FOO=45) at t002.c:41
FAIL t002.assert_equal_fail
PASS t002.assert_equal_pass
EVENT ASSERT NP_ASSERT_NOT_EQUAL(r=45, FOO=45) at t002.c:51
FAIL t002.assert_not_equal_fail
PASS t002.assert_not_equal_pass
EVENT ASSERT NP_ASSERT_PTR_EQUAL(x=0x42, DEFACED=0xbdefaced) at t002.c:63
FAIL t002.assert_ptr_equal_fail
PASS t002.assert_ptr_equal_pass
EVENT ASSERT NP_ASSERT_PTR_NOT_EQUAL(x=0xbdefaced, DEFACED=0xbdefaced) at t002.c:73
FAIL t002.assert_ptr_not_equal_fail
PASS t002.assert_ptr_not_equal_pass
EVENT ASSERT NP_ASSERT_NULL(x=0xbdefaced) at t002.c:84
FAIL t002.assert_null_fail
PASS t002.assert_null_pass
EVENT ASSERT NP_ASSERT_NOT_NULL(x=(nil)) at t002.c:94
FAIL t002.assert_not_null_fail
PASS t002.assert_not_null_pass
EVENT ASSERT NP_ASSERT_STR_EQUAL(x="Bye", GREET="Hello") at t002.c:106
FAIL t002.assert_str_equal_fail
PASS t002.assert_str_equal_pass
EVENT ASSERT NP_ASSERT_STR_NOT_EQUAL(x="Hello", GREET="Hello") at t002.c:116
FAIL t002.assert_str_not_equal_fail
PASS t002.assert_str_not_equal_pass
EXIT 1
